{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","setInterval","tick","console","log","toLocaleTimeString","prevProps","name","props","clearInterval","setState","className","React","Component","App","isClockVisible","clockName","Math","round","random","handleShowButtonClick","handleHideButtonClick","handleSetRandomNameClick","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"2OAOMA,E,4MACJC,MAAQ,CACNC,KAAM,IAAIC,M,EAGZC,a,yDAEA,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,EAAKC,OAGLC,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAC3B,KAGHF,QAAQC,IAAIJ,KAAKD,W,gCAGnB,SAAmBO,GACbA,EAAUC,OAASP,KAAKQ,MAAMD,MAEhCJ,QAAQC,IAAR,qCAA0CE,EAAUC,KAApD,eAA+DP,KAAKQ,MAAMD,S,kCAI9E,WACMP,KAAKD,SACPU,cAAcT,KAAKD,W,kBAIvB,WACEC,KAAKU,SAAS,CACZb,KAAM,IAAIC,S,oBAId,WACE,IAAQD,EAASG,KAAKJ,MAAdC,KAER,OACE,oBAAGc,UAAU,YAAb,qCAEOd,EAAKQ,6B,GA5CEO,IAAMC,WAkDXlB,ICrDTmB,G,kNACJlB,MAAQ,CACNmB,gBAAgB,EAChBC,UAAWC,KAAKC,MAAsB,IAAhBD,KAAKE,W,EAG7BC,sBAAwB,WACtB,EAAKV,SAAS,CAAEK,gBAAgB,K,EAGlCM,sBAAwB,WACtB,EAAKX,SAAS,CAAEK,gBAAgB,K,EAGlCO,yBAA2B,WACzB,EAAKZ,SAAS,CACZM,UAAWC,KAAKC,MAAsB,IAAhBD,KAAKE,a,4CAI/B,WACE,IAAQJ,EAAmBf,KAAKJ,MAAxBmB,eAER,OACE,sBAAKJ,UAAU,MAAf,UACE,6CACCI,GAAkB,cAAC,EAAD,CAAOR,KAAMP,KAAKJ,MAAMoB,YAC3C,wBACEO,KAAK,SACLC,QAASxB,KAAKoB,sBAFhB,wBAMA,wBACEG,KAAK,SACLC,QAASxB,KAAKqB,sBAFhB,wBAMA,wBACEE,KAAK,SACLC,QAASxB,KAAKsB,yBAFhB,oC,GAvCUV,IAAMC,YAkDTC,ICnDfW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b1fed234.chunk.js","sourcesContent":["import React from 'react';\nimport './Clock.scss';\n\ntype NameType = {\n  name: number,\n};\n\nclass Clock extends React.Component<NameType> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId?: NodeJS.Timer;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.tick();\n\n      // eslint-disable-next-line\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n\n    // eslint-disable-next-line\n    console.log(this.timerId);\n  }\n\n  componentDidUpdate(prevProps: NameType) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  tick() {\n    this.setState({\n      date: new Date(),\n    });\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <p className=\"clockText\">\n        Current time:\n        {` ${date.toLocaleTimeString()}`}\n      </p>\n    );\n  }\n}\n\nexport default Clock;\n","import React from 'react';\nimport Clock from './components/Clock/Clock';\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: Math.round(Math.random() * 10000),\n  };\n\n  handleShowButtonClick = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  handleHideButtonClick = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  handleSetRandomNameClick = () => {\n    this.setState({\n      clockName: Math.round(Math.random() * 10000),\n    });\n  };\n\n  render() {\n    const { isClockVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {isClockVisible && <Clock name={this.state.clockName} />}\n        <button\n          type=\"button\"\n          onClick={this.handleShowButtonClick}\n        >\n          Show Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.handleHideButtonClick}\n        >\n          Hide Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.handleSetRandomNameClick}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}